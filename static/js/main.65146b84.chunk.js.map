{"version":3,"sources":["image/WPILogo.png","image/pfizer3.png","image/pfizer2.png","components/SearchBar.js","components/ProceduresItem.js","components/ProceduresList.js","components/ProceduresDetail.js","components/TextItem.js","components/TextList.js","components/TextDetail.js","components/TempDistribution.js","components/OriginalText.js","components/simFile.js","components/App.js","index.js"],"names":["module","exports","SearchBar","state","term","onInputChange","event","setState","target","value","onFromSubmit","preventDefault","props","onTermSubmit","onSubmit","this","className","style","backgroundColor","opacity","top","onChange","type","React","Component","ProceduresItem","info","onInfoSelect","onClick","filename","ProceduresList","wrapper","document","querySelector","scroll","BScroll","scrollY","scrollX","click","scrollbar","fade","interactive","console","log","renderedList","infos","map","key","fileid","ref","ProceduresDetail","data","x","y","hovertemplate","mode","marker","color","clickText","clickStateId","material","stateId","points","selectedPoint","tempdata","text","onPointSelect","idList","operations","temperatures","durations","id","temperature","push","action","duration","re","dataPreprocess","layout","paper_bgcolor","plot_bgcolor","width","height","title","yaxis","xaxis","TextItem","itemIdx","index","TextList","scrollObject","scrollToIdx","textwrapper","a","scrollToElement","Object","values","VideoDetail","left","padding","point","TempDistribution","tempsamples","side","hoveron","onSelected","onHover","OriginalText","SimFile","onFileSelect","listdata","simDegree","i","length","simData","tfidfsimilarity","simButtonType","combinedsimilarity","plotdata","slice","reverse","hovertext","showgrid","showline","linecolor","titlefont","font","tickfont","autotick","dtick","ticks","tickcolor","margin","l","r","b","t","legend","size","yanchor","xanchor","paddingBottom","App","selectedInfo","tempData","tempStat","fileName","filesInfo","datatotal","fileInfo","TemperatureSamples","fileList","sectionStyle","backgroundImage","Background","repeat","position","src","WPILogo","alt","pfizerLogo","TextDetail","ReactDOM","render"],"mappings":"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","file":"static/js/main.65146b84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WPILogo.1e17c32b.png\";","module.exports = __webpack_public_path__ + \"static/media/pfizer3.8c8dc313.png\";","module.exports = __webpack_public_path__ + \"static/media/pfizer2.b97c062c.png\";","import React from 'react';\n\n\nclass SearchBar extends React.Component {\n\n    state = {term:'default term'};\n\n\n    onInputChange = (event) => {\n        this.setState({term:event.target.value})\n    };\n\n    onFromSubmit = (event) => {\n        event.preventDefault();\n        this.props.onTermSubmit(this.state.term);\n    };\n\n\n    render() {\n        const searchBarStyle = {\n            backgroundColor:\"rgba(0,0,0,0\",\n            opacity: 0.7,\n            top:\"20px\",\n        }\n\n        return (\n            <div onSubmit={this.onFromSubmit} className=\"search-bar ui segment\" style={searchBarStyle}>\n                <form className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Keywords Search</label>\n                        <input\n                            onChange={this.onInputChange}\n                            type=\"text\"\n                            value={this.state.term}/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nconst ProceduresItem = ({info, onInfoSelect}) => {\n\n    return (\n        <div onClick={() => onInfoSelect(info)} className=\"item\">\n\n                <div className=\"header\">\n                    {info.filename}\n                </div>\n\n        </div>\n    )\n};\nexport default ProceduresItem;","import React from 'react';\nimport ProceduresItem from './ProceduresItem';\nimport BScroll from 'better-scroll';\n\nimport './ProceduresList.css'\n\n\nclass ProceduresList extends React.Component{\n\n    componentDidMount() {\n        const wrapper = document.querySelector('.wrapper');\n        const scroll = new BScroll(wrapper,{\n            scrollY: true,\n            scrollX: false,\n            click: true,\n            scrollbar: {\n                fade: true,\n                interactive: true // 1.8.0 新增\n            }});\n\n        console.log(scroll);\n    }\n\n    render(){\n        let videoListStyle ={\n            backgroundColor: \"aliceblue\",\n        };\n        const renderedList = this.props.infos.map(info => {\n            return <ProceduresItem key={info.fileid}\n                                   info={info}\n                                   onInfoSelect = {this.props.onInfoSelect}\n                              />\n        });\n\n        return(\n            <div style={videoListStyle}>\n                <div className = \"wrapper\" ref=\"wrapper\">\n                    <div className= \"content\">\n                        <div className = \"ui tiny relaxed divided list\">\n                            {renderedList}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n\n        )\n    }\n}\n\nexport default ProceduresList;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\n\n\nclass ProceduresDetail extends React.Component {\n\n\n    state = {data : [{\n                    x: [],\n                    y:  [],\n                    hovertemplate:  [],\n                    type: 'scatter',\n                    mode: 'lines+markers',\n                    marker: {color: 'red'},\n            }],\n            clickText:null,\n            clickStateId:null,\n            material:null,\n        };\n\n    dataPreprocess(tempdata){\n        let idList = [];\n        let operations = [];\n        let temperatures = [];\n        let durations = [];\n        for (const id in tempdata.temperature) {\n            idList.push(id);\n            operations.push('At:' + tempdata.temperature[id] + '°C, '+ tempdata.action[id]+' '+tempdata.duration[id]);\n            temperatures.push(tempdata.temperature[id]);\n            durations.push(tempdata.duration[id]);\n        }\n        return [idList,operations,temperatures,durations];\n    }\n\n    // onClick={() => onInfoSelect(info)}\n\n    onClick = (event) => {\n        // event.preventDefault();\n\n        const stateId = event.points[0].x;\n\n        let selectedPoint =  {\n            clickText:this.props.info.tempdata.text[stateId],\n            clickStateId:stateId\n        };\n        this.props.onPointSelect(selectedPoint)\n    };\n\n\n\n    render(){\n        const info = this.props.info;\n        if (!info){\n            return <div>Loading...</div>}\n        const re = this.dataPreprocess(this.props.info.tempdata);\n        const data = [{\n            x: re[0],\n            y: re[2],\n            hovertemplate:  re[1],\n            type: 'scatter',\n            mode: 'lines+markers',\n            marker: {color: 'blue'},\n        }];\n\n\n\n\n\n        return (\n            <div>\n                <Plot\n                    className=\"plotly-plot\"\n                    data={data}\n                    layout={ {\n                        paper_bgcolor:'rgba(0,0,0,0)',\n                        plot_bgcolor:'rgba(0,0,0,0)',\n                        width: 550,\n                        height: 400,\n                        title: 'Temperature Fluctuations',\n                        yaxis:{title:'Celsius'},\n                        xaxis:{title:'OperationId'}\n                    } }\n                    onClick={this.onClick}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ProceduresDetail;","import React from 'react';\n\nconst TextItem = (props) => {\n    const itemIdx = \"index\"+ props.index;\n    let  boldTextStyle = {\n        color:\"blue\"\n    };\n\n    if(props.index === props.clickStateId){\n        return (\n            <div className=\"item\">\n                <div className={itemIdx}>\n                    <div className=\"content\" style={boldTextStyle}>\n                        <strong>{props.info}</strong>\n                    </div>\n                </div>\n            </div>\n        );\n    }else{\n        return(\n            <div className=\"item\">\n                <div className={itemIdx}>\n                    <div className=\"content\">\n                        {props.info}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default TextItem;","import React from 'react';\nimport TextItem from './TextItem';\nimport BScroll from \"better-scroll\";\nimport './TextList.css';\n\n\n\nclass TextList extends React.Component {\n    state = {\n        scrollObject:null,\n        scrollToIdx:0\n    };\n    componentDidMount() {\n        const textwrapper = document.querySelector('.textwrapper');\n        const scroll = new BScroll(textwrapper,{\n            scrollY: true,\n            scrollX: false,\n            click: true,\n           }\n        );\n        this.setState({scrollObject:scroll});\n        this.setState({scrollToIdx:this.props.clickStateId})\n\n\n\n    }\n    componentDidUpdate() {\n        // this.state.scrollObject.scrollToElement('TextItem:nth-child(4)', 1000);\n        let a = document.querySelector(\".textwrapper .content .item .index\" + this.props.clickStateId );\n        console.log(a);\n        this.state.scrollObject.scrollToElement(a, 400, 0)\n    }\n\n    render(){\n        const allTest = Object.values(this.props.infos);\n        const renderedList = allTest.map((info,index) => {\n            return <TextItem\n                    key={index}\n                    info={info}\n                    index={index}\n                    clickStateId={this.props.clickStateId}/>\n        });\n\n        return(\n            <div className = \"textwrapper\">\n                <div className = \"content\">\n                    <div className = \"ui tiny relaxed divided list\">\n                        {renderedList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextList;","import React from 'react';\nimport TextList from \"./TextList\";\n\n\n\n\n\n\nclass VideoDetail extends React.Component {\n\n\n    state = {\n            material:null,\n        };\n\n\n    onClick = (event) => {\n        // event.preventDefault();\n        console.log(event);\n        const stateId = event.points[0].x;\n        this.setState({\n            clickText:this.props.info.tempdata.text[stateId],\n            clickStateId:stateId\n        })\n    };\n\n\n\n    render(){\n        const info = this.props.info;\n\n        if (!info){\n            return <div>Loading...</div>}\n\n        let TextComponentStyle = {\n            left: \"0px\",\n            top: \"2px\",\n            backgroundColor: \"aliceblue\",\n            padding:\"20px\",\n            width: \"360px\"\n    };\n\n\n\n        // this.setState({data:data})\n        return (\n            <div>\n                <div className=\"content\" style={TextComponentStyle}>\n                    <b>{this.props.info.filename}</b>\n                    <br />\n                    <br />\n                    <div>\n                        <TextList\n                            infos = {this.props.info.tempdata.text}\n                            clickStateId = {this.props.point.clickStateId}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoDetail;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\n\n\n\nclass TempDistribution extends React.Component {\n    state = {data : [{\n            x: [],\n            y:  [],\n            hovertemplate:  [],\n            type: 'scatter',\n            mode: 'lines+markers',\n            marker: {color: 'red'},\n        }]};\n\n    render(){\n        const tempsamples = this.props.tempsamples;\n        if (!tempsamples){\n            return <div>Loading...</div>}\n\n\n        const data = [{\n            x: tempsamples,\n            type: 'violin',\n            side: 'positive',\n            hoveron:\"violins+points+kde\"\n        }];\n\n\n        return (\n            <div>\n                <Plot\n                    data={data}\n                    layout={ {width: 550, height: 400, title: 'Temperature Distribution',xaxis:{title:'Celsius'},\n                        paper_bgcolor:'rgba(0,0,0,0)',\n                        plot_bgcolor:'rgba(0,0,0,0)'} }\n                    onClick={this.onClick}\n                    onSelected={this.onHover}\n                />\n            </div>\n        )\n    }\n}\n\nexport default TempDistribution;","import React from 'react';\n\nclass OriginalText extends  React.Component {\n    state = {text :''};\n\n\n\n    render(){\n        const textstyle = {\n            backgroundColor:\"rgba(0,0,0,0.2\",\n            opacity: 0.8\n        };\n        const info = 1;\n        if (!info){\n            return <div>Loading...</div>}\n        return (\n            <div style={textstyle}>\n                <div className=\"ui segment\">\n                    <h4 className=\"ui header\"> {this.props.title}</h4>\n                    <p> {this.props.text}</p>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default OriginalText;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\n\n\n\nclass SimFile extends React.Component {\n\n    onClick = (event) => {\n        this.props.onFileSelect(event.points[0].y);\n    };\n\n    onHover = (event) => {\n        console.log(event);\n    };\n\n    state = {data : [{\n            x: [],\n            y:  [],\n            hovertemplate:  [],\n            type: 'scatter',\n            mode: 'lines+markers',\n            marker: {color: 'red'},\n        }]};\n\n\n    dataPreprocess(listdata){\n        let idList = [];\n        let filename = [];\n        let simDegree = [];\n        for (var i=0; i < listdata.length ;i++) {\n            idList.push(i);\n            filename.push(listdata[i][0]);\n            simDegree.push(listdata[i][1]);\n        }\n        const formateData = {idList:idList,filename:filename,simDegree:simDegree}\n        return formateData;\n    }\n\n\n    render(){\n\n\n\n\n\n        if (!this.props.info){\n            return <div>Loading...</div>}\n        let simData = this.props.info.tfidfsimilarity;\n        if(this.props.simButtonType === \"TF-IDF\"){\n            simData = this.props.info.tfidfsimilarity;\n        }\n        if(this.props.simButtonType === \"Combined\"){\n            simData = this.props.info.combinedsimilarity;\n        }\n\n        const plotdata = this.dataPreprocess(simData);\n\n\n\n        const data = [{\n            y: plotdata.filename.slice(0,10).reverse(),\n            x: plotdata.simDegree.slice(0,10).reverse(),\n            type: 'scatter',\n            mode: 'markers',\n            hovertext:plotdata.simDegree.slice(0,10).reverse(),\n\n        }];\n\n        var layout = {\n            title: 'Similar Files',\n            yaxis:{\n                title: 'fileId',\n            },\n            xaxis: {\n                title:'Cosine Similarity',\n                showgrid: true,\n                showline: true,\n                linecolor: 'rgb(102, 102, 102)',\n                titlefont: {\n                    font: {\n                        color: 'rgb(204, 204, 204)'\n                    }\n                },\n                tickfont: {\n                    font: {\n                        color: 'rgb(102, 102, 102)'\n                    }\n                },\n                autotick: true,\n                dtick: 10,\n                ticks: 'outside',\n                tickcolor: 'rgb(102, 102, 102)'\n            },\n            margin: {\n                l: 140,\n                r: 40,\n                b: 50,\n                t: 80\n            },\n            legend: {\n                font: {\n                    size: 10,\n                },\n                yanchor: 'middle',\n                xanchor: 'right'\n            },\n            width: 360,\n            height: 320,\n            paddingBottom:100,\n            paper_bgcolor: 'aliceblue',\n            plot_bgcolor: 'aliceblue',\n        };\n\n\n\n        return (\n            <div >\n                <Plot\n                    data={data}\n                    layout={layout}\n                    onClick={this.onClick}\n                    onSelected={this.onHover}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SimFile;","// Import the components\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport ProceduresList from \"./ProceduresList\";\nimport ProceduresDetail from \"./ProceduresDetail\";\nimport TextDetail from \"./TextDetail\";\nimport TempDistribution from \"./TempDistribution\";\nimport OriginalText from \"./OriginalText\";\nimport SimFile from \"./simFile\";\n\n// import resource\nimport datatotal from \"../data/ensemble_data.json\";\nimport Background from '../image/pfizer2.png';\nimport WPILogo from '../image/WPILogo.png';\nimport pfizerLogo from '../image/pfizer3.png'\n\n// import css style\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n    state = {\n        simButtonType:\"TF-IDF\",\n        infos:[],\n        selectedInfo:null,\n        tempData:null,\n        tempStat:null,\n        fileName:null,\n        selectedPoint:{\n            clickStateId:null,\n            clickText:null\n\n        },\n    };\n\n\n    onTermSubmit = async (fileName) => {\n        // acye request!\n        const filesInfo = datatotal.fileInfo;\n        this.setState({\n            infos:filesInfo,\n            selectedInfo:filesInfo[0],\n            TemperatureSamples:datatotal.TemperatureSamples,\n        });\n\n        for (let i=0; i < filesInfo.length ;i++) {\n            if(filesInfo[i].fileid === fileName){\n                this.setState({selectedInfo:filesInfo[i]})\n            }\n        }\n    };\n\n\n    onInfoSelect = (info) => {\n        this.setState({selectedInfo:info})\n    };\n\n    onPointSelect = (point) => {\n        this.setState({selectedPoint:point});\n    };\n\n    onFileSelect = (fileName) => {\n        const fileList = datatotal.fileInfo;\n        this.setState({fileName:fileName});\n        for (let i=0; i < fileList.length ;i++) {\n            if(fileList[i].fileid === fileName){\n                this.setState({selectedInfo:fileList[i]})\n            }\n        }\n    };\n\n\n    render(){\n        let loaderStyle ={\n            height:\"30vh\",\n            // opacity: \"0.1\",\n            backgroundColor:\"rgba(255, 255, 255, 0.5)\"\n        };\n\n        let sectionStyle = {\n            width: \"100%\",\n            height: \"100%\",\n            backgroundImage: `url(${Background})`,\n            opacity: 1,\n            repeat:\"repeat-x\",\n            position: 'absolute',\n            // backgroundSize: \"100%\",\n            backgroundColor:\"rgba(255, 255, 255, 0.5)\"\n    };\n        console.log(datatotal);\n        if(!this.state.selectedInfo){\n            return(\n                <div style={sectionStyle}>\n                    <div className=\"upperLogo\">\n                        <img src={WPILogo} alt=\"WPI\" className=\"WPILogo\"/>\n\n                    </div>\n\n                    <div className=\"downLogo\">\n                        <img src={pfizerLogo} alt=\"pfizer\" className=\"pfizerLogo\" />\n                    </div>\n\n\n                    <div className=\"ui container\">\n                        <SearchBar className=\"searchBar\" onTermSubmit = {this.onTermSubmit}/>\n                        <div className=\"ui segment\">\n                            <div className=\"ui active inverted dimmer\" style={loaderStyle}>\n                                <div className=\"ui massive text loader\">Preparing Files...</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }else{\n            return(\n                <div style={sectionStyle}>\n                    <div className=\"upperLogo\">\n                        <img src={WPILogo} alt=\"WPI\" className=\"WPILogo\"/>\n\n                    </div>\n\n                    <div className=\"downLogo\">\n                        <img src={pfizerLogo} alt=\"pfizer\" className=\"pfizerLogo\" />\n                    </div>\n\n                    <div className=\"ui container\">\n                        <SearchBar onTermSubmit = {this.onTermSubmit}/>\n                        <div className=\"ui centered grid\">\n                            <div className=\"three wide column\">\n                                <ProceduresList\n                                    onInfoSelect = {this.onInfoSelect}\n                                    infos = {this.state.infos}/>\n                            </div>\n\n                            <div className=\"seven wide column\">\n                                <div className=\"four wide column\">\n                                    <ProceduresDetail\n                                        info = {this.state.selectedInfo}\n                                        onPointSelect = {this.onPointSelect}\n                                    />\n                                </div>\n                                <div className=\"Summary1\">\n                                    <OriginalText title=\"Temperature Fluctuation \"\n                                                  text=\"Line chart: Corresponding to the temperature extracted by\n                                                      regular expression.\"/>\n                                </div>\n                                <div className=\"four wide column\">\n                                    <TempDistribution\n                                        tempsamples = {datatotal.TemperatureSamples}\n                                    />\n                                </div>\n\n                                <div className=\"Summary2\">\n                                    <OriginalText title=\"Distribution Component\"\n                                                  text=\"\n                                                  Single-side violin chart: Corresponding to this distribution of temperature\n                                                  from all chemical procedure.\"/>\n                                </div>\n\n                            </div>\n\n\n                            <div className=\"five wide centered column\">\n                                <div className=\"column-2nd\">\n                                    <div className=\"textdetail\">\n                                        <TextDetail\n                                            info = {this.state.selectedInfo}\n                                            point = {this.state.selectedPoint}\n                                        />\n                                    </div>\n                                    <div className=\"Summary3\">\n                                        <OriginalText title=\"The Original Text Component\"\n                                                      text=\"\n                                                      This component indicate from which sentence we extracted the temperature,\n                                                      a sentence corresponds to a point in chart of temperature fluctuation.\n                                                       \"/>\n                                    </div>\n                                    <div className=\"simfile\">\n                                        <SimFile\n                                            onFileSelect = {this.onFileSelect}\n                                            info = {this.state.selectedInfo}\n                                            simButtonType = {this.state.simButtonType}\n                                        />\n\n                                    </div>\n                                    <div className=\"simfile-button\">\n                                        <div className=\"Tiny ui buttons\" style={{width: \"360px\"}}>\n                                            <button className=\"ui blue basic button\"\n                                                    onClick={() => (this.setState({simButtonType:\"TF-IDF\"}))}\n                                            >TF-IDF</button>\n                                            <div className=\"or\"></div>\n                                            <button className=\"ui blue basic button\"\n                                                    onClick={() => (this.setState({simButtonType:\"Combined\"}))}\n                                            >Combined</button>\n                                        </div>\n                                    </div>\n                                    <div className=\"Summary4\">\n                                        <OriginalText title=\"Similar Files component \"\n                                                      text=\"\n                                                      SimilarFile component indicates the top10 similar files of selected procedure.\n                                                      We provide two options: The scores of similarity computed by TF-IDF and by combination of compounds and operations.\n                                                      \"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\n\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);\n\n"],"sourceRoot":""}